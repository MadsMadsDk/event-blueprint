@import"http://fonts.googleapis.com/css?family=Roboto:400,700";/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:Aleo Regular;src:url(fonts/aleo-regular-webfont.eot);src:local('☺︎'),url(fonts/aleo-regular-webfont.woff) format("woff"),url(fonts/aleo-regular-webfont.otf) format("opentype"),url(fonts/aleo-regular-webfont.svg#grablau) format("svg")}@font-face{font-family:Aleo Bold;src:url(fonts/aleo-bold-webfont.eot);src:local('☺︎'),url(fonts/aleo-bold-webfont.woff) format("woff"),url(fonts/aleo-bold-webfont.otf) format("opentype"),url(fonts/aleo-bold-webfont.svg#grablau) format("svg")}body{background:#f3f4f8;font-family:Roboto,arial,sans-serif;font-size:16px;min-height:100%;line-height:1.5}*+*{margin-top:32px;margin-top:2rem}.margins-narrow *+*{margin-top:16px;margin-top:1rem}.margins-off *+*{margin-top:0}h1,h2,h3,h4,h5,h6{font-family:Aleo Regular,arial,sans-serif}h1{font-size:44px;font-size:2.8rem}h2{font-size:38px;font-size:2.4rem}h3{font-size:32px;font-size:2.0rem}h4{font-size:25px;font-size:1.6rem}h5{font-size:19px;font-size:1.2rem}h6{font-size:16px;font-size:1rem;font-family:Aleo Bold,arial,sans-serif}a,a:link{color:#284a7d;text-decoration:none;border-bottom:1px dotted white}a:visited{color:#486591}p.lead{font-size:19px;font-size:1.2rem}.grid-full-width{width:100%}.grid-one-half{width:50%}.grid-one-third{width:33.33333%}.grid-two-third{width:33.33333% * 2}.grid-one-fourth{width:25%}.dashboard{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.dashboard>header{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;background:#333;position:relative}.dashboard>header nav{position:absolute;left:0;top:0;right:0}.dashboard>header nav ul{list-style:none;padding:0;margin:0;width:100%}.dashboard>header nav ul li{display:block;border-bottom:1px solid #666}.dashboard>header nav ul li a{color:white;padding:5% 10%;display:block;border:none}.dashboard>main{-webkit-box-flex:8;-webkit-flex:8;-ms-flex:8;flex:8;padding:16px;padding:1rem;margin-top:0}
/*# sourceMappingURL=data:application/json;base64, */